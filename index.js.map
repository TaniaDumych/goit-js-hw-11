{"version":3,"file":"index.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '49273794-9f9572efe635ab4987a028735';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport async function fetchImages(query) {\n  try {\n    const response = await axios.get(BASE_URL, {\n      params: {\n        key: API_KEY,\n        q: query,\n        image_type: 'photo',\n        orientation: 'horizontal',\n        safesearch: true,\n      },\n    });\n\n    return response.data.hits;\n  } catch (error) {\n    console.error('Error fetching images:', error);\n    return [];\n  }\n}\n","import SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst lightbox = new SimpleLightbox('.gallery a');\n\nexport function renderGallery(images) {\n  gallery.innerHTML = images\n    .map(\n      ({ webformatURL, largeImageURL, tags, likes, views, comments, downloads }) => `\n        <li class=\"gallery-item\">\n          <a href=\"${largeImageURL}\">\n            <img src=\"${webformatURL}\" alt=\"${tags}\" />\n          </a>\n          <div class=\"info\">\n            <p>üëç ${likes}</p>\n            <p>üëÅÔ∏è ${views}</p>\n            <p>üí¨ ${comments}</p>\n            <p>‚¨áÔ∏è ${downloads}</p>\n          </div>\n        </li>\n      `\n    )\n    .join('');\n\n  lightbox.refresh();\n}\n","import { fetchImages } from './js/pixabay-api.js';\nimport { renderGallery } from './js/render-functions.js';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst form = document.querySelector('.form');\nconst searchInput = form.querySelector('input[name=\"search-text\"]');\nconst gallery = document.querySelector('.gallery');\n\nform.addEventListener('submit', async (event) => {\n  event.preventDefault();\n  \n  const query = searchInput.value.trim();\n  if (!query) {\n    iziToast.warning({\n      title: 'Warning',\n      message: 'Please enter a search query!',\n    });\n    return;\n  }\n\n  gallery.innerHTML = '';\n\n  try {\n    const images = await fetchImages(query);\n    if (images.length === 0) {\n      iziToast.error({\n        title: 'Error',\n        message: 'Sorry, there are no images matching your search query. Please try again!',\n      });\n      return;\n    }\n    renderGallery(images);\n  } catch (error) {\n    iziToast.error({\n      title: 'Error',\n      message: 'Something went wrong. Please try again later.',\n    });\n  }\n\n  form.reset();\n});\n"],"names":["API_KEY","BASE_URL","fetchImages","query","axios","error","gallery","lightbox","SimpleLightbox","renderGallery","images","webformatURL","largeImageURL","tags","likes","views","comments","downloads","form","searchInput","event","iziToast"],"mappings":"+vBAEA,MAAMA,EAAU,qCACVC,EAAW,2BAEV,eAAeC,EAAYC,EAAO,CACvC,GAAI,CAWF,OAViB,MAAMC,EAAM,IAAIH,EAAU,CACzC,OAAQ,CACN,IAAKD,EACL,EAAGG,EACH,WAAY,QACZ,YAAa,aACb,WAAY,EACb,CACP,CAAK,GAEe,KAAK,IACtB,OAAQE,EAAO,CACd,eAAQ,MAAM,yBAA0BA,CAAK,EACtC,EACR,CACH,CCnBA,MAAMC,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAW,IAAIC,EAAe,YAAY,EAEzC,SAASC,EAAcC,EAAQ,CACpCJ,EAAQ,UAAYI,EACjB,IACC,CAAC,CAAE,aAAAC,EAAc,cAAAC,EAAe,KAAAC,EAAM,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAAO;AAAA;AAAA,qBAE/DL,CAAa;AAAA,wBACVD,CAAY,UAAUE,CAAI;AAAA;AAAA;AAAA,oBAG9BC,CAAK;AAAA,qBACJC,CAAK;AAAA,oBACNC,CAAQ;AAAA,oBACRC,CAAS;AAAA;AAAA;AAAA,OAIxB,EACA,KAAK,EAAE,EAEVV,EAAS,QAAO,CAClB,CCrBA,MAAMW,EAAO,SAAS,cAAc,OAAO,EACrCC,EAAcD,EAAK,cAAc,2BAA2B,EAC5DZ,EAAU,SAAS,cAAc,UAAU,EAEjDY,EAAK,iBAAiB,SAAU,MAAOE,GAAU,CAC/CA,EAAM,eAAc,EAEpB,MAAMjB,EAAQgB,EAAY,MAAM,KAAI,EACpC,GAAI,CAAChB,EAAO,CACVkB,EAAS,QAAQ,CACf,MAAO,UACP,QAAS,8BACf,CAAK,EACD,MACD,CAEDf,EAAQ,UAAY,GAEpB,GAAI,CACF,MAAMI,EAAS,MAAMR,EAAYC,CAAK,EACtC,GAAIO,EAAO,SAAW,EAAG,CACvBW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,0EACjB,CAAO,EACD,MACD,CACDZ,EAAcC,CAAM,CACrB,MAAe,CACdW,EAAS,MAAM,CACb,MAAO,QACP,QAAS,+CACf,CAAK,CACF,CAEDH,EAAK,MAAK,CACZ,CAAC"}